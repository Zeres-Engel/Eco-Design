# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Libnest2D::stdThreading Libnest2D::clipperBackend Libnest2D::nloptOptimizer Libnest2D::libnest2d Libnest2D::libnest2d_headeronly)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target Libnest2D::stdThreading
add_library(Libnest2D::stdThreading INTERFACE IMPORTED)

set_target_properties(Libnest2D::stdThreading PROPERTIES
  INTERFACE_LINK_LIBRARIES "Threads::Threads"
)

# Create imported target Libnest2D::clipperBackend
add_library(Libnest2D::clipperBackend INTERFACE IMPORTED)

set_target_properties(Libnest2D::clipperBackend PROPERTIES
  INTERFACE_LINK_LIBRARIES "Clipper::Clipper;Boost::boost"
)

# Create imported target Libnest2D::nloptOptimizer
add_library(Libnest2D::nloptOptimizer INTERFACE IMPORTED)

set_target_properties(Libnest2D::nloptOptimizer PROPERTIES
  INTERFACE_LINK_LIBRARIES "NLopt::nlopt"
)

# Create imported target Libnest2D::libnest2d
add_library(Libnest2D::libnest2d INTERFACE IMPORTED)

set_target_properties(Libnest2D::libnest2d PROPERTIES
  INTERFACE_LINK_LIBRARIES "Libnest2D::libnest2d_headeronly"
)

# Create imported target Libnest2D::libnest2d_headeronly
add_library(Libnest2D::libnest2d_headeronly INTERFACE IMPORTED)

set_target_properties(Libnest2D::libnest2d_headeronly PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "LIBNEST2D_THREADING_std;LIBNEST2D_GEOMETRIES_clipper;LIBNEST2D_OPTIMIZER_nlopt"
  INTERFACE_INCLUDE_DIRECTORIES "/app/lib/libnest2d/include"
  INTERFACE_LINK_LIBRARIES "Libnest2D::stdThreading;Libnest2D::clipperBackend;Libnest2D::nloptOptimizer"
)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
